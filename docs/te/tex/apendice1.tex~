\section{Algoritmo Metodo de Biseccion}
\label{Apendice1:Metodo de Biseccion}

\begin{center}
\begin{footnotesize}
\begin{verbatim}
#! /usr/bin/python
#!encoding: UTF-8
import time
import timeit

def f(x):
  return (5**x)-5
def biseccion(a,b,tol):
  c=(a+b)/2.0
  while((f(c)!=0.000001) and (abs(b-a)>tol)):
    if f(a)*f(c)<0.000001:
      b=c
    else:
      a=c
    c=(a+b)/2.0
  return c

import sys
if (len(sys.argv)==4):
  A=float(sys.argv[1])
  B=float(sys.argv[2])
  TOL=float(sys.argv[3]) 
else:
  A=float(raw_input("Introduzca el extremo a del intervalo: "))
  B=float(raw_input("Introduzca el extremo b del intervalo: "))
  TOL=float(raw_input("Introduzca la tolerancia del error que desee: "))
if f(A)*f(B)<0.000001:
  start=time.time()
  raiz=biseccion(A,B,TOL)
  finish=time.time()-start
  print "El tiempo de ejecucion es:"
  print finish
  print "La raiz aproximada de la funcion escogida es: %4.3f" %raiz
else:
  print "En ese intervalo no existe raÃ­z, por favor vuelva a ejecutar el programa con otros valores"
\end{verbatim}
\end{footnotesize}
\end{center}

\section{Algoritmo Hardware y Software}
\label{Apendice1:Hardware y Software}

\begin{center}
\begin{footnotesize}
\begin{verbatim}

import os
import platform

def SOFTinfo():
  softinfo={}
  softinfo={'Several': platform.uname() , 'S.O':platform.platform(), 'Pythons Version': platform.python_version() , 'Date':platform.python_build()}
  return softinfo

def CPUinfo():
# infofile on Linux machines:
  infofile = '/proc/cpuinfo'
  cpuinfo = {}
  if os.path.isfile(infofile):
    f = open(infofile, 'r')
    for line in f:
      try:
	name, value = [w.strip() for w in line.split(':')]
      except:
	continue
      if name == 'model name':
	cpuinfo['CPU type'] = value
      elif name == 'cache size':
	cpuinfo['cache size'] = value
      elif name == 'cpu MHz':
	cpuinfo['CPU speed'] = value + 'Hz'
      elif name == 'vendor_id':
	cpuinfo['vendor ID'] = value
    f.close()
  return cpuinfo

if __name__ == '__main__':
  
  softinfo=SOFTinfo()
  for keys in softinfo.keys():
    print softinfo[keys]
    
  cpuinfo=CPUinfo()
  for keys in cpuinfo.keys():
    print CPUinfo()
  
  print "Introduzca el nombre del fichero para almacenar los resultados:"
  nombre_fichero= raw_input();
  f=open(nombre_fichero, "w")
  
  for keys in softinfo.keys():
    if type (softinfo[keys]) is list:
      f.write('\n'.join(softinfo[keys]))
    else:
      f.write(str(softinfo[keys]))
      f.write('\n')
      
  for keys in cpuinfo.keys():
    if type (cpuinfo[keys]) is list:
      f.write('\n'.join(cpuinfo[keys]))
    else:
      f.write(str(cpuinfo[keys]))
      f.write('\n')
  f.close()
\end{verbatim}
\end{footnotesize}
\end{center}
